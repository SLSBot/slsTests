update_minion_config:
  file.replace:
    - name: /etc/salt/minion
    - pattern: "^master: .*$"
    - repl: |
        master:
          - master1.example.com
          - master2.example.com
    - backup: .bak
    - show_changes: True


# Generated by AI
# The first line is the name of the state, which is "update_minion_config". This is used to identify the state and can be any name chosen by the user.

# The next line starts the state declaration with "file.replace". This state is used to replace a specific pattern in a file with a new value.

# The "- name" parameter specifies the path of the file that will be modified. In this case, it is "/etc/salt/minion".

# The "- pattern" parameter specifies the regular expression pattern that will be searched for in the file. In this case, it is "^master: .*$", which means any line that starts with "master: " and has any characters after it.

# The "- repl" parameter specifies the replacement value that will be used to replace the pattern. In this case, it is a multi-line string starting with "master:" and followed by two values, "master1.example.com" and "master2.example.com". This means that the original line starting with "master: " will be replaced with these two values, effectively adding them as new master servers.

# The "- backup" parameter specifies the extension to use for the backup file that will be created before making any changes. In this case, it is ".bak", so the original file will be backed up as "/etc/salt/minion.bak" before any changes are made.

# The "- show_changes" parameter specifies whether or not to display the changes that were made to the file. In this case, it is set to True, so the changes will be displayed in the output when the state is applied.